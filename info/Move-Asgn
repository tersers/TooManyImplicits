Move Assignment
- all of the below are true:
	- No user-def move asgn
	- No user-decl copy ctor
	- No user-decl move ctor
	- No user-decl copy asgn
	- No user-decl dtor
	- Implicitly-declared move asgn is not deleted
- Or, = default

Deleted/Undefined:
- T has a non-static data member that is const;
- T has a non-static data member of a reference type;
- T has a non-static data member that cannot be move-assigned (has deleted, inaccessible, or ambiguous move assignment operator);
- T has direct or virtual base class that cannot be move-assigned (has deleted, inaccessible, or ambiguous move assignment operator);
- T has a non-static data member or a direct or virtual base without a move assignment operator that is not trivially copyable;
- T has a direct or indirect virtual base class. (until C++14)
- A deleted implicitly-declared move assignment operator is ignored by overload resolution. (since C++14)

Trivial:
- It is not user-provided (meaning, it is implicitly-defined or defaulted);
- T has no virtual member functions;
- T has no virtual base classes;
- the move assignment operator selected for every direct base of T is trivial;
- the move assignment operator selected for every non-static class type (or array of class type) member of T is trivial;
- T has no non-static data members of volatile-qualified type. (since C++14)